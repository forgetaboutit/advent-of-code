<Query Kind="Program" />

public static class Extensions
{
    public static TOut Let<TIn, TOut>(
        this TIn val,
        Func<TIn, TOut> f)
        => f(val);
}

public sealed record Position1(
    int Depth,
    int Horizontal);

private static (string Cmd, int Arg) ParseCommand(
    string commandString)
{
    var command = commandString.Split(
        " ",
        StringSplitOptions.RemoveEmptyEntries
        | StringSplitOptions.TrimEntries);

    if (command.Length != 2
        || !int.TryParse(command[1], out var arg))
    {
        throw new ArgumentOutOfRangeException();
    }

    return (command[0], arg);
}

public static int InterpretInstructionsPart1(
    string instructions)
    => instructions.
        Split(Environment.NewLine, StringSplitOptions.RemoveEmptyEntries).
        Aggregate(
            new Position1(0, 0),
            (position, line) =>
                ParseCommand(line) switch
                {
                    ("forward", var forward) => position with
                    {
                        Horizontal = position.Horizontal + forward
                    },
                    ("down", var down) => position with
                    {
                        Depth = position.Depth + down
                    },
                    ("up", var up) => position with
                    {
                        Depth = position.Depth - up
                    },
                    _ => throw new ArgumentOutOfRangeException()
                }).
            Let(position => position.Horizontal * position.Depth);

public sealed record Position2(
    int Depth,
    int Horizontal,
    int Aim);

public static int InterpretInstructionsPart2(
    string instructions)
    => instructions.
        Split(Environment.NewLine, StringSplitOptions.RemoveEmptyEntries).
        Aggregate(
            new Position2(0, 0, 0),
            (position, line) =>
                ParseCommand(line) switch
                {
                    ("forward", var forward) => position with
                    {
                        Horizontal = position.Horizontal + forward,
                        Depth = position.Depth + position.Aim * forward
                    },
                    ("down", var down) => position with
                    {
                        Aim = position.Aim + down
                    },
                    ("up", var up) => position with
                    {
                        Aim = position.Aim - up
                    },
                    _ => throw new ArgumentOutOfRangeException()
                }).
        Let(position => position.Horizontal * position.Depth);

void Main()
{
    const string input = @"forward 2
forward 5
forward 5
down 4
forward 8
down 1
forward 2
forward 2
down 9
down 2
forward 6
forward 3
down 9
down 2
forward 4
up 2
forward 7
up 6
forward 8
forward 4
up 5
forward 3
down 9
forward 5
forward 8
forward 6
forward 6
forward 8
forward 8
forward 5
down 2
forward 8
down 4
down 6
down 6
forward 7
forward 6
up 3
up 5
down 5
down 3
up 2
down 7
down 2
forward 1
forward 6
up 1
down 7
forward 8
down 7
down 6
forward 5
up 6
forward 9
down 9
up 3
down 6
down 1
forward 6
up 1
down 1
up 3
up 7
forward 1
down 5
forward 7
forward 3
down 9
up 8
forward 1
down 4
up 1
forward 9
forward 7
down 2
forward 8
down 2
down 5
down 2
up 1
down 5
forward 4
forward 8
forward 3
forward 3
forward 1
down 1
forward 1
down 7
up 7
down 3
down 1
down 7
down 4
forward 7
forward 5
down 9
down 5
forward 3
up 7
down 2
up 1
forward 1
forward 2
down 7
down 3
forward 7
up 4
forward 3
up 8
down 9
down 4
forward 5
forward 6
down 3
down 5
down 4
down 9
down 8
forward 6
down 3
down 1
down 9
down 6
forward 9
forward 2
up 5
forward 5
forward 4
down 9
up 7
up 2
forward 1
forward 8
forward 6
up 8
down 9
down 2
forward 7
down 6
forward 7
up 9
up 7
down 8
up 1
forward 2
forward 9
down 9
forward 6
down 2
down 1
up 3
forward 4
down 3
down 4
down 9
up 8
up 8
forward 3
up 7
forward 9
forward 7
up 2
up 8
forward 2
down 6
forward 3
forward 1
down 7
down 2
forward 9
forward 9
down 3
forward 2
forward 8
down 6
forward 6
forward 5
forward 1
forward 6
down 8
down 7
up 9
down 6
up 7
down 2
up 8
up 8
down 3
down 7
up 2
up 2
down 6
down 6
forward 2
down 6
forward 8
forward 9
down 3
forward 6
down 9
forward 1
up 6
down 3
up 5
forward 9
forward 7
forward 9
forward 5
up 6
down 3
down 3
down 3
forward 1
up 5
forward 3
forward 2
down 1
forward 7
down 1
forward 6
forward 5
forward 9
up 6
forward 1
up 8
down 7
forward 6
forward 3
forward 1
up 6
forward 4
up 6
down 7
forward 8
forward 4
forward 6
forward 5
up 6
down 7
up 9
down 7
forward 3
down 7
forward 6
down 6
down 6
forward 8
up 8
forward 8
forward 2
down 8
forward 4
forward 9
forward 7
down 4
down 7
forward 4
forward 3
forward 2
forward 2
forward 5
down 6
forward 1
forward 6
up 8
up 3
up 9
forward 3
up 8
forward 3
up 8
down 9
up 7
forward 9
forward 1
down 7
forward 9
down 6
forward 4
down 3
up 9
forward 5
down 4
up 6
down 1
up 9
forward 2
up 2
down 1
forward 7
down 6
down 4
down 7
down 4
down 8
up 9
down 6
up 3
down 7
forward 3
forward 1
down 1
forward 2
forward 6
down 6
forward 5
down 8
down 8
down 6
down 9
forward 6
forward 7
up 8
forward 5
up 8
down 6
up 3
forward 9
up 9
forward 2
up 6
forward 2
down 8
forward 3
down 5
down 8
up 6
down 3
down 7
down 4
forward 5
forward 8
down 8
forward 6
down 8
up 1
forward 5
down 3
down 2
up 1
forward 3
forward 7
forward 6
forward 9
up 8
down 2
down 1
down 7
forward 4
forward 2
down 9
down 3
down 5
up 6
down 2
forward 8
up 1
up 5
down 6
down 7
forward 3
down 4
up 6
down 9
up 6
down 2
down 2
down 6
down 3
forward 9
down 6
forward 5
forward 6
forward 4
down 6
forward 3
down 9
up 8
forward 2
up 3
forward 1
up 8
forward 1
down 6
down 3
forward 5
forward 4
down 9
up 3
down 6
forward 4
down 8
down 3
down 7
forward 1
forward 2
forward 8
down 2
down 6
up 9
forward 2
forward 4
forward 8
down 3
forward 9
down 7
up 8
forward 1
down 6
down 3
forward 5
forward 5
forward 2
down 2
down 2
down 2
up 4
forward 2
forward 5
forward 1
forward 5
down 3
forward 8
up 1
forward 9
up 5
forward 2
down 4
forward 8
forward 9
up 6
up 1
down 7
down 3
forward 9
down 3
down 3
forward 3
forward 6
up 4
forward 2
down 9
forward 5
forward 3
forward 5
down 6
up 6
down 7
forward 2
down 4
forward 6
forward 5
forward 8
down 4
up 3
up 4
down 9
forward 9
down 7
down 1
down 9
down 6
down 8
forward 7
down 3
up 3
up 5
forward 5
up 6
down 6
forward 9
down 7
forward 6
up 1
forward 7
forward 8
down 9
down 1
forward 4
up 2
down 3
up 3
down 6
forward 6
down 7
down 2
forward 8
forward 2
forward 3
forward 5
up 8
up 6
down 1
up 7
down 1
down 8
forward 5
up 7
down 1
forward 8
down 6
down 2
up 7
down 1
forward 1
up 8
forward 5
down 7
down 8
forward 4
down 6
down 2
forward 4
forward 7
down 5
down 1
down 8
down 3
up 8
down 6
down 1
down 1
forward 4
down 8
up 5
forward 3
forward 3
forward 5
forward 8
up 7
forward 5
down 8
forward 9
up 9
forward 1
down 2
up 9
down 7
up 1
up 3
forward 9
forward 8
forward 3
forward 8
down 8
down 5
down 7
up 7
forward 9
up 8
down 9
down 9
down 1
up 4
up 4
up 3
forward 3
down 7
down 3
forward 5
up 9
down 3
up 2
forward 1
forward 4
up 9
forward 6
down 6
down 6
forward 2
forward 2
down 4
forward 9
up 6
down 8
down 8
down 9
up 4
down 9
down 3
down 7
forward 4
up 4
up 5
down 2
up 2
forward 1
up 8
forward 2
down 6
forward 9
down 9
forward 9
up 8
down 5
up 3
up 9
down 8
forward 6
forward 2
forward 7
down 9
down 8
up 9
down 5
up 5
down 1
forward 3
down 2
down 5
down 4
down 1
down 5
down 5
down 5
forward 8
down 2
down 3
down 4
down 2
up 8
up 1
down 5
forward 8
down 6
forward 9
down 6
down 6
down 5
forward 5
forward 3
forward 7
down 6
forward 4
down 8
up 9
up 6
forward 5
down 4
forward 8
forward 1
forward 8
up 5
up 5
forward 6
down 3
down 7
up 7
down 5
forward 1
forward 3
up 3
down 3
down 3
down 5
forward 9
down 2
up 5
up 2
forward 1
down 1
forward 5
down 8
forward 8
forward 9
forward 3
forward 2
forward 4
down 5
up 1
down 5
up 1
up 4
forward 2
forward 4
down 6
up 2
up 4
forward 4
down 7
forward 2
up 1
forward 4
up 4
forward 9
down 1
down 4
up 1
forward 2
forward 3
down 6
forward 9
forward 3
down 2
forward 9
up 4
forward 5
forward 2
down 2
forward 5
down 5
down 3
down 7
down 7
up 3
down 7
forward 9
forward 7
up 4
forward 7
up 8
down 8
forward 5
down 2
down 9
up 8
forward 4
forward 4
forward 2
up 4
down 5
forward 3
forward 6
forward 5
forward 3
forward 7
up 9
forward 1
forward 2
up 7
down 4
forward 8
down 2
forward 1
down 1
down 9
up 2
down 2
forward 8
forward 5
up 9
forward 5
down 2
forward 2
down 7
forward 5
down 1
forward 9
forward 8
forward 8
forward 9
forward 8
down 9
forward 8
down 1
down 2
down 9
up 2
forward 8
forward 8
down 9
forward 8
up 8
forward 2
down 5
up 3
forward 2
up 3
down 6
forward 5
up 7
forward 2
forward 7
forward 7
down 8
forward 3
up 5
down 8
down 3
down 8
up 6
down 6
up 4
forward 7
up 6
up 1
down 5
up 8
forward 8
forward 9
down 8
forward 6
down 8
down 9
down 8
forward 9
up 1
down 1
down 8
down 5
down 2
up 7
forward 4
down 4
forward 6
down 1
forward 5
forward 3
forward 9
up 8
down 4
down 6
down 4
down 1
up 9
forward 9
down 9
forward 7
down 2
down 8
forward 2
forward 5
down 6
down 1
down 1
up 3
forward 9
up 7
down 1
down 6
forward 6
up 2
down 4
down 7
forward 3
down 9
down 1
forward 7
forward 2
forward 6
down 4
forward 7
forward 8
forward 3
forward 7
up 8
forward 5
up 8
down 8
forward 3
forward 8
forward 7
forward 3
down 4
forward 9
forward 4
up 6
forward 4
forward 6
up 4
forward 6
forward 2
down 3
down 3
down 4
down 1
down 9
up 1
up 9
down 7
up 9
forward 5
down 2
up 7
forward 9
up 1
down 5
up 8
forward 9
down 1
up 3
forward 3
forward 9
up 7
forward 3
down 7
forward 3
forward 5
forward 4
up 3
forward 3
down 8
forward 7
up 5
forward 9
down 6
up 6
up 1
forward 8
down 9
forward 9
forward 9
down 5
down 7
forward 7
down 5
down 3
forward 4
up 6
forward 6
forward 2
down 8
down 6
forward 1
forward 1
down 6
forward 1
down 6
down 2
forward 1
forward 6
up 4
up 7
up 3
down 6
forward 1
forward 9
forward 4
down 4
forward 3
down 8
down 6
down 6
forward 2
forward 8
forward 6
down 4
up 2
down 1
up 4
down 8
forward 9
down 4
down 8
up 8
forward 2
up 9
down 9
forward 2
down 8
forward 3
down 1
up 9
forward 6
down 9
forward 2
down 2
up 5
down 4
down 5
down 7
forward 4
down 4
forward 6
forward 2
down 8
up 3
up 9
forward 3
forward 6
down 6
down 2
down 5
down 4
forward 1
up 2
down 3
forward 6
forward 5
down 4
down 3
forward 2
forward 4
down 9
down 3
down 4
up 6
forward 8
up 2
up 8
up 4
forward 7
forward 5
forward 9
down 6
forward 7
forward 9
up 3
forward 6";

    InterpretInstructionsPart1(input).Dump();
    InterpretInstructionsPart2(input).Dump();
}
